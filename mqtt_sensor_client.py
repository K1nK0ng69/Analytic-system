import json
import paho.mqtt.client as mqtt
import redis

r = redis.Redis(host='localhost', port=6379, db=0)

def on_message(client, userdata, msg):
    try:
        data = json.loads(msg.payload)
        print(f"üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å –¥–∞—Ç—á–∏–∫–æ–≤: {data}")
        r.rpush('equipment_data', json.dumps(data))
        r.set('latest_data', json.dumps(data))
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}, –¥–∞–Ω–Ω—ã–µ: {msg.payload}")

def on_connect(client, userdata, flags, reason_code, properties):
    if reason_code == 0:
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±—Ä–æ–∫–µ—Ä—É MQTT")
        client.subscribe("equipment/sensors")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {reason_code}")

client = mqtt.Client(callback_api_version=mqtt.CallbackAPIVersion.VERSION2)
client.on_connect = on_connect
client.on_message = on_message
client.connect("localhost", 1883, 60)
client.loop_forever()
